pipeline {

  agent  any
  
  stages {
  stage('拉取代码') {
  	when { environment name: 'UpdateType', value: 'online' }
    steps {
    ansiColor('xterm'){
      echo '拉取gitlab代码'
      git url: '${GitlabUrl}'
    }
    }    
  }
  stage('maven打包') {
  	when { environment name: 'UpdateType', value: 'online' }
    steps {
    ansiColor('xterm'){
      echo 'maven打包'
      mvn clean
      mvn install -Dmaven.test.skip=true -f pom.xml
      mvn package -Dmaven.test.skip=true -f pom.xml
    }
    }    
  }
  stage('代码包重命名') {
  	when { environment name: 'UpdateType', value: 'online' }
    steps {
    ansiColor('xterm'){
      sh "which java"
      echo '拉取代码'
    }
    }    
  }
  stage('关闭监控') {
  	when { environment name: 'UpdateType', value: 'online' }
    steps {
    ansiColor('xterm'){
      sh "which java"
      echo '拉取代码'
    }
    }    
  }
 stage('推送代码') {
    when { environment name: 'UpdateType', value: 'online' }
    steps {
    ansiColor('xterm'){
      echo '推送代码'
    }
    }
  }
  stage('停止服务') {
    when { environment name: 'UpdateType', value: 'stop' }
    steps {
    ansiColor('xterm'){
      echo '停止服务'
    }
    }
  }
  stage('重启服务') {
    when { environment name: 'UpdateType', value: 'online' }
    steps {
    ansiColor('xterm'){
      echo '重启服务'
    }
    }
  }
  stage('心跳检测') {
  	when { environment name: 'UpdateType', value: 'online' }
    steps {
    ansiColor('xterm'){
      sh "which java"
      echo '拉取代码'
    }
    }    
  }
  stage('开启监控') {
  	when { environment name: 'UpdateType', value: 'online' }
    steps {
    ansiColor('xterm'){
      sh "which java"
      echo '拉取代码'
    }
    }    
  }
  stage('回滚代码') {
    when { environment name: 'UpdateType', value: 'rollback' }
    steps {
    ansiColor('xterm'){
      echo '回滚代码'
    }
    }
  }
	}
  post {
      failure {
         echo '此次构建失败，请查看日志，排查原因'
     }
  }
}